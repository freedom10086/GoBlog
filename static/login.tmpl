{{define "content"}}
<main class="container" style="display: flex;align-items: center;justify-content: center;">
    <div class="card">
        <div class="card-header">
            <ul class="nav card-header-tabs">
                <li class="tab-item">
                    <a class="nav-link active" href="#">密码登录</a>
                </li>
                <li class="tab-item">
                    <a class="nav-link" href="#">扫码登录</a>
                </li>
            </ul>
        </div>
        <form class="card-body" method="post" onsubmit="return startSubmit();">
            <div class="form-group">
                <label for="username">用户名</label>
                <input type="text" class="form-control" minlength="3" maxlength="20" autocomplete="name" required
                       id="username" placeholder="用户名">
            </div>
            <div class="form-group">
                <label for="password">密码</label>
                <input type="password" class="form-control" required id="password" autocomplete="password" minlength="6"
                       maxlength="25" placeholder="密码">
            </div>
            <div class="form-group">
                <label for="valid">验证码</label>
                <div class="flex-row" style="display: flex">
                    <input id="valid" placeholder="验证码" required style="flex-grow: 2;flex-basis: 100px" type="text"
                           pattern="[a-zA-Z\d]{4}" maxlength="4" class="form-control">
                    <canvas id="validcanvas" width="100" height="28"
                            style="border: 1px solid #ddd;margin-left: 12px;flex-grow: 1">
                        你的浏览器不支持canvas请使用chrome或者firefox浏览器
                    </canvas>
                </div>
            </div>
            <div class="form-check">
                <label class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input">
                    <span class="custom-control-indicator"></span>
                    <span class="custom-control-description">自动登录</span>
                </label>
            </div>
            <button id="btn-login" type="submit" class="btn btn-primary">登录</button>
        </form>
        <div class="card-footer">
            <a class="small" onClick="return forgetPassword()" href="#">忘记了密码?</a>
            <a href="register" class="small ml-2">还没有账号?去注册</a>
        </div>
    </div>
</main>
<script>
    let eventSource;
    let timeoutTimmer = null;
    let yzm;

    const usernameInput = document.querySelector("#username");
    const passwordInput = document.querySelector("#password");
    const validCodeInput = document.querySelector("#valid");
    const loginBtn = document.querySelector("#btn-login");

    function initPage() {
        let currentPos = 0;
        let contents = [];
        const cardBody = document.querySelector(".card-body");
        let size = Math.min(cardBody.offsetWidth, cardBody.offsetHeight) * 0.7;
        contents[0] = cardBody.innerHTML;
        contents[1] = `<canvas id="qrcode" width="${size}" height="${size}"></canvas><div class="alert alert-secondary mt-3" role="alert">二维码加载中...</div>`;
        const width = cardBody.offsetWidth + "px";
        const height = cardBody.offsetHeight + "px";
        const btn1 = document.querySelectorAll(".card .nav-link")[0];
        const btn2 = document.querySelectorAll(".card .nav-link")[1];
        [btn1, btn2].forEach((v, k) => {
            v.addEventListener("click", function () {
                if (k !== currentPos) {
                    currentPos = k;
                    cardBody.innerHTML = contents[k];
                    if (currentPos === 1) {
                        btn1.className = "nav-link";
                        btn2.className = "nav-link active";
                        cardBody.style = "width:" + width + ";height:" + height + ";display: flex;flex-direction: column;align-items: center;justify-content: center;";
                        startQrLogin();
                    } else {
                        btn2.className = "nav-link";
                        btn1.className = "nav-link active";
                        cardBody.style = "width:" + width + ";height:" + height;
                        closeQrlogin();
                    }
                }
            })
        });
        yzm = new Yzm();
        yzm.createYZM(document.querySelector("#validcanvas"));
        validCodeInput.addEventListener("keyup", function () {
            if (validCodeInput.value.length !== 4) {
                validCodeInput.className = "form-control is-invalid";
                validCodeInput.title = "验证码不正确";
            } else if (validCodeInput.value.length === 4 &&
                !yzm.checkValid(validCodeInput.value)) {
                validCodeInput.className = "form-control is-invalid";
                validCodeInput.setCustomValidity("验证码不正确");
                validCodeInput.title = "验证码不正确";
            } else {
                validCodeInput.className = "form-control is-valid";
                validCodeInput.title = "";
                validCodeInput.setCustomValidity("");
            }
        });

        usernameInput.addEventListener("change", function () {
            if (usernameInput.value.length >= 3 && usernameInput.value.length < 20) {
                if (usernameInput.className !== "form-control") {
                    usernameInput.className = "form-control";
                }
                if (passwordInput.className !== "form-control") {
                    passwordInput.className = "form-control";
                }
            } else {
                usernameInput.className = "form-control is-invalid";
            }
        });

        passwordInput.addEventListener("change", function () {
            if (passwordInput.value.length >= 6 && passwordInput.value.length < 20) {
                if (passwordInput.className !== "form-control") {
                    passwordInput.className = "form-control";
                }
            } else {
                passwordInput.className = "form-control is-invalid";
            }
        });
    }

    function startSubmit() {
        if (!usernameInput.checkValidity()) {
            usernameInput.className = "form-control is-invalid";
            return false
        } else {
            usernameInput.className = "form-control";
        }

        if (!passwordInput.checkValidity()) {
            passwordInput.className = "form-control is-invalid";
            return false
        } else {
            passwordInput.className = "form-control";
        }

        if (!validCodeInput.checkValidity()) return false;
        if (!yzm.checkValid(validCodeInput.value)) {
            validCodeInput.setCustomValidity("验证码不正确");
            return false;
        } else {
            validCodeInput.setCustomValidity("");
        }

        loginBtn.disabled = true;
        usernameInput.disabled = true;
        passwordInput.disabled = true;
        validCodeInput.disabled = true;

        Loading.show(10, "提交中...");
        Api.login(usernameInput.value, passwordInput.value, (ok, res, status) => {
            loginBtn.disabled = false;
            usernameInput.disabled = false;
            passwordInput.disabled = false;
            validCodeInput.disabled = false;
            Loading.dismiss();

            if (!ok) {
                usernameInput.className = "form-control is-invalid";
                passwordInput.className = "form-control is-invalid";
                Modal.confirm({"title": "错误:" + status, "content": res});
            } else {
                localStorage.setItem("token", res.data.token);
                localStorage.setItem("profile", JSON.stringify(res.data.user));

                Toast.show(`登陆成功！即将转到首页`);
                setTimeout(function () {
                    location.replace('/'); //不加入历史
                    //window.location.href = "/" //此方法会退回历史
                }, 1500);
            }
        });

        return false;
    }

    function startQrLogin() {
        //EventSource 文档
        //https://developer.mozilla.org/zh-CN/docs/Server-sent_events/Using_server-sent_events
        timeoutTimmer = setTimeout(qrLoginTimeOut, 60000); //60s超时
        const alert = document.querySelector(".alert");
        if (typeof(EventSource) !== "undefined") {
            eventSource = new EventSource("qrlogin");
            eventSource.addEventListener("uuid", function (e) {
                console.log("uuid:", e.data);
                genQrcode("qrcode", e.data);
                alert.className = "alert alert-secondary mt-3";
                alert.innerHTML = "使用手机APP扫码登录";
            });

            eventSource.addEventListener("data", function (e) {
                console.log("data:", e.data);
                let uid = e.data.substring(2);
                console.log("uid:", uid);
                if (e.data.startsWith("1")) {
                    alert.className = "alert alert-success mt-3";
                    alert.innerHTML = "登录成功,即将跳转到首页";
                    closeQrlogin();
                    setTimeout(function () {
                        window.location.href = "/"
                    }, 1200);
                } else {
                    alert.className = "alert alert-success mt-3";
                    alert.innerHTML = "扫描成功，请点击确认登录"
                }
            });

            eventSource.addEventListener("timeout", function () {
                qrLoginTimeOut();
            });

            eventSource.onerror = function (e) {
                alert.className = "alert alert-warning mt-3";
                alert.innerHTML = "连接服务器出现了错误"
            }
        } else {
            alert.className = "alert alert-danger mt-3";
            alert.innerHTML = "浏览器不支持EventSource,请更换chrome浏览器"
        }
    }

    function closeQrlogin() {
        if (eventSource !== null) {
            eventSource.close();
        }

        if (timeoutTimmer !== null) {
            clearTimeout(timeoutTimmer);
            timeoutTimmer = null;
        }
    }

    //60s超时不再和服务器连接
    function qrLoginTimeOut() {
        const alert = document.querySelector(".alert");
        console.log("timeout");
        alert.className = "alert alert-warning mt-3";
        alert.innerHTML = "二维码已过期,请刷新重试";
        if (timeoutTimmer !== null) {
            clearTimeout(timeoutTimmer);
            timeoutTimmer = null;
        }
        eventSource.close();
    }

    function forgetPassword() {
        Modal.promote({"title": "重设密码,请输入你注册的邮箱", "input": {"type": "email", "hint": "注册邮箱"}}, function (text) {
            //todo API
        })
    }
</script>
{{end}}